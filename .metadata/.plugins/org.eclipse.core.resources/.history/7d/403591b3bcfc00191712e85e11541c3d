package quizapp;

import java.util.Scanner;

public class QuizApllication {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		
		
		
		
		
	}

}

class Quiz
{
	void begin()
	{
	Question q1 = new Question("Which is a keyword in Java?", "interface", "inherit" , "unsign", "derive", new Answer("interface"));
	Question q2 = new Question("Where does an object get created in memory?", "Stack", "Queue" , "Heap", "None of these", new Answer("Heap"));

	Question q3 = new Question("Which keyword is used to prevent a method from getting overidden in Java?", "interface", "extends" , "final", "static", new Answer("final"));

	Question q4 = new Question("What purpose is the this() constructor call used?", "To invoke a parent class constructor", "To invoke a child class constructor" , "To invoke a parent class constructor", "To invoke a parent class constructor", new Answer("To invoke a child class constructor"));

	Question q5 = new Question("When does an object become unreachable in Java?", "When the reference is pointing to null", "When the reference is pointing to another object" , "When the reference is pointing to null", "When the reference is pointing to null", new Answer("When the reference is pointing to null"));

	
	Question questionsArr[] = {q1,q2,q3,q4,q5};
	
	int countTotal = 0;
	int countCorrect = 0;
	int countWrong = 0;
	
	for(Question q:questionsArr) //For each loop
	{
		
		System.out.println(q.getQuestion()); // Pint the questions
		System.out.println("A. " + q.getOption1()); // Print the options
		System.out.println("B. " + q.getOption2());
		System.out.println("C. " + q.getOption3());
		System.out.println("D. " + q.getOption4());
		System.out.println("\nEnter an option");
		
		Scanner scanner = new Scanner(System.in);
		
		char option = scanner.next().charAt(0);
		String answer="";
		
		
		switch(option)
		{
		
		case 'A':
			answer = q.getOption1();
			break;
		case 'B':
			answer = q.getOption2();
			break;
		case 'C':
			answer = q.getOption3();
			break;
		case 'D':
			answer = q.getOption4();
			break;
		default:break;
			
		}
		
		if(answer.equals(q.answer.getAnswer()));
		{
			
			System.out.println("------------------------------------------------------");
			System.out.println("Correct Answer");
			System.out.println("------------------------------------------------------");
			countCorrect++;
		}
		else
		{
			System.out.println("------------------------------------------------------");
			System.out.println("Wrong Answer");
			System.out.println("------------------------------------------------------");
			countWrong++;
		}
		System.out.println("\n===========================================================================================\n");
		
		countTotal++;
	}
	
	
	}
	
	
}

class Question
{
	
	String question;
	String option1;
	String option2;
	String option3;
	String option4;
	Answer answer;
	public Question(String question, String option1, String option2, String option3, String option4, Answer answer) {
		super();
		this.question = question;
		this.option1 = option1;
		this.option2 = option2;
		this.option3 = option3;
		this.option4 = option4;
		this.answer = answer;
	}
	public String getQuestion() {
		return question;
	}
	public String getOption1() {
		return option1;
	}
	public String getOption2() {
		return option2;
	}
	public String getOption3() {
		return option3;
	}
	public String getOption4() {
		return option4;
	}
	public Answer getAnswer() {
		return answer;
	}
	
	
	
}

class Answer
{
	
	String answer;

	public Answer(String answer) {
		super();
		this.answer = answer;
	}

	public String getAnswer() {
		return answer;
	}
	
	
	
}
